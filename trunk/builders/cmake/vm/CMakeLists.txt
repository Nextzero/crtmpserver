cmake_minimum_required(VERSION 2.6)
PROJECT(vm)

#make the list with all the source files
FILE(GLOB_RECURSE SOURCES "${CRTMPSERVER_SOURCES_ROOT}/vm/src/*.cpp" )

#prepare the include directories
INCLUDE_DIRECTORIES(
	${OPENSSL_INCLUDE_PATH}
	${V8_INCLUDE_PATH}
	${LUA_INCLUDE_PATH}
	${CRTMPSERVER_SOURCES_ROOT}/common/include
	${CRTMPSERVER_SOURCES_ROOT}/vm/include
	)


IF(${V8_FOUND})
	ADD_DEFINITIONS(-DVM_V8)
ENDIF(${V8_FOUND})


#create the library
ADD_LIBRARY(${PROJECT_NAME} ${LIB_TYPE} ${SOURCES})
ADD_PRECOMPILED_HEADER(${PROJECT_NAME} "${CRTMPSERVER_SOURCES_ROOT}/common/include/common.h")
IF(${LIB_TYPE} MATCHES "SHARED")
    TARGET_LINK_LIBRARIES(
	${PROJECT_NAME} 
	${LUA_LIBRARY_PATH} 
	common pthread 
	${EXECINFO_LIBRARY_PATH} 
	${OPENSSL_LIBRARY_PATH} 
	${CRYPTO_LIBRARY_PATH} 
	${Z_LIBRARY_PATH}
	${V8_LIBRARY_PATH})
    INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${CRTMPSERVER_ROOT})
ENDIF(${LIB_TYPE} MATCHES "SHARED")

